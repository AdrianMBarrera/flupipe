/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:.*:PREPARE_ENVIRONMENT:UNTAR_.*' {
        ext.args2 = '--no-same-owner'
        publishDir = [
            path: { "${params.outdir}/genome" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_reference
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}

if (!params.skip_fastqc) {
    process {
        withName: 'FASTQC_RAW' {
            ext.args = '--quiet'
            publishDir = [
                path: { "${params.outdir}/01_fastqc_raw" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}

if (!params.skip_fastp) {
    process {
        withName: '.*:.*:FASTP_AND_FASTQC_TRIM:FASTP' {
            publishDir = [
                [
                    path: { "${params.outdir}/02_adapter_trimming" },
                    mode: params.publish_dir_mode,
                    pattern: "*.{json,html}",
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ],
                [
                    path: { "${params.outdir}/02_adapter_trimming/log" },
                    mode: params.publish_dir_mode,
                    pattern: "*.log"
                ],
                [
                    path: { "${params.outdir}/02_adapter_trimming" },
                    mode: params.publish_dir_mode,
                    pattern: "*.fail.fastq.gz",
                    enabled: params.save_trimmed_fail
                ]
            ]
        }
    }

    if (!params.skip_fastqc) {
        process {
            withName: '.*:.*:FASTP_AND_FASTQC_TRIM:FASTQC_TRIM' {
                ext.args = '--quiet'
                publishDir = [
                    path: { "${params.outdir}/03_fastqc_trim" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }
        }
    }
}

if (!params.skip_kraken2) {
    process {
        withName: 'KRAKEN2_BUILD' {
            publishDir = [
                path: { "${params.outdir}/genome" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                enabled: params.save_reference
            ]
        }

        withName: 'KRAKEN2' {
            ext.args = '--report-zero-counts'
            publishDir = [
                path: { "${params.outdir}/04_remove_host_reads" },
                mode: params.publish_dir_mode,
                pattern: "*.{report.txt,unclassified_1.fastq.gz,unclassified_2.fastq.gz}"
            ]
        }
    }
}

process {
    withName: 'UNICYCLER' {
        publishDir = [
            [
                path: { "${params.outdir}/05_assembly" },
                mode: params.publish_dir_mode,
                pattern: '*.{fa.gz,gfa.gz}'
            ],
            [
                path: { "${params.outdir}/05_assembly/log" },
                mode: params.publish_dir_mode,
                pattern: '*.log'
            ]
        ]
    }
}
